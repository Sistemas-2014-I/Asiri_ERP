@model Common.PROt02_producto

@{
    ViewBag.Title = "Editar Producto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-title">
    <div>
        <h1><i class="fa fa-edit"></i>Edición de Producto</h1>
        <p>Editar producto...!</p>
    </div>
    <ul class="breadcrumb">
        <li><i class="fa fa-home fa-lg"></i></li>
        <li>
            <a href="@Url.Action("Index")">
                Productos
            </a>
        </li>
        <li>
            <a href="@Url.Action("Edit", new { id = Model.idProducto})">
                Editar
            </a>
        </li>
    </ul>
</div>

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <h3 class="card-title"></h3>
                <div class="card-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.idProducto)  
                    @Html.HiddenFor(x=>x.fecRegistro)
                    @Html.HiddenFor(x=>x.idUsuario)
                    @Html.HiddenFor(x=>x.fecEliminacion)
                    @Html.HiddenFor(x=>x.idUsuarioEliminar)
                    @Html.HiddenFor(x=>x.idMoneda)
                    @Html.HiddenFor(x=>x.codProducto)
                    @Html.HiddenFor(x => x.codBarra)
                    <div class="cold-lg-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.nombreProductoGenerico, new { @class = "control-label" })
                            @Html.EditorFor(model => model.nombreProductoGenerico, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nombreProductoGenerico, "", new { @class = "text-danger" })    
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.nombreProductoComercial, new { @class = "control-label" })
                            @Html.EditorFor(model => model.nombreProductoComercial, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nombreProductoComercial, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.descProducto, new { @class = "control-label " })
                            @Html.TextAreaFor(model => model.descProducto, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.descProducto, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.obsvProducto, new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.obsvProducto, new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.obsvProducto, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.activo, new { @class = "control-label" })             
                            <div class="checkbox">
                            </div>
                            <div class="toggle-flip">
                                <label>
                                    @{ string eval = Model.activo ? "checked" : null;}
                                    <input checked="@eval" data-val="true" data-val-required="El estado es obligatorio" id="activo" name="activo" type="checkbox" value="true">
                                    <span class="flip-indecator" data-toggle-on="ON" data-toggle-off="OFF"></span>
                                    @Html.ValidationMessageFor(model => model.activo, "", new {@class = "text-danger"})
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="card-body">
                                @Html.LabelFor(model => model.idCategoria, "Categoría", new { @class = "control-label" })
                                <div class="clearfix"></div>
                                <div class="col-md-4">
                                    @Html.DropDownList("idCategoria",null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idCategoria, "", new { @class = "text-danger" })
                                </div>
                                @*<button type="button" class="fa fa-lg fa-plus btn btn-success btn-lg" data-toggle="modal" data-target="#myModal"></button>*@
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12" style="text-align: center;">
            <div class="card">  
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <button class="btn btn-success icon-btn" type="submit">
                                <i class="fa fa-fw fa-lg fa-repeat">
                                </i>Actualizar</button>&nbsp;&nbsp;&nbsp;
                            <a class="btn btn-default icon-btn" href="@Url.Action("Index")">
                                <i class="fa fa-fw fa-lg fa-times-circle"></i>Cancelar</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
<script src="~/Scripts/Plugins/select2.min.js"></script>
<script type="text/javascript">
    $('#idCategoria').select2();
</script>
    @Scripts.Render("~/bundles/jqueryval")
}
