@model Mvc_Entity.CLlt05_cita


@Html.Raw(TempData["msg"])

@using (Html.BeginForm("ReprogramarCita", "Cita", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cita</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idCita)

        <div class="form-group">
            @Html.Label("Fecha de Cita", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="sandbox-container" onclick="disabled">
                    @Html.Editor("fecCita", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.fecCita, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Hora de Inicio", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="clockpicker" onkeypress="return soloNumeros(event), valida_hora(valor)" onpaste="return false">
                    @Html.EditorFor(model => model.horaInicio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.horaInicio, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Duracion (En minutos)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="duracionEstimada" onkeypress="return soloNumeros(event)" onpaste="return false">
                @Html.EditorFor(model => model.duracionEstimada, new { htmlAttributes = new { @class = "form-control", @min = "00", @max = "59" } })
                @Html.ValidationMessageFor(model => model.duracionEstimada, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Empleado",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idEmpleado", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idEmpleado, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-clockpicker.js" charset="UTF-8"></script>
<script src="~/Scripts/jquery-clockpicker.min.js" charset="UTF-8"></script>
<script src="~/Scripts/Calendar/bootstrap-datepicker.min.js" charset="UTF-8"></script>
<script src="~/Scripts/locale/bootstrap-datepicker.es.min.js" charset="UTF-8"></script>

<script type="text/javascript">
                var input = $('.clockpicker input').clockpicker({
                                    //placement: 'right',
                                    aling: 'up',
                                    autoclose: true,
                                    default: 'now',

                                });
</script>


<script>
                                $('#sandbox-container input').datepicker({
                                    format: "yyyy-mm-dd",
                                    startDate: "@DateTime.Now.Date",
                                    language: 'es',
                                    daysOfWeekHighlighted: "0",
                                    autoclose: true
                                });
</script>
<script>
    function soloNumeros(e) {
        key = e.keyCode || e.which;
        teclado = String.fromCharCode(key);
        numeros = "0123456789";
        especiales = "8-37-38-46";
        teclado_especial = false;

        for (var i in especiales) {
            if (key == especiales[i]) {
                teclado_especial = true;
            }
        }
        if (numeros.indexOf(teclado) == -1 && !teclado_especial) {
            return false;
        }
    }

    jQuery(function ($) {
        $.mask.definitions['H'] = '[012]';
        $.mask.definitions['N'] = '[012345]';
        $.mask.definitions['n'] = '[0123456789]';
        $(".clockpicker").mask("Hn:Nn");
    });

    function valida_hora(valor) {
        //que no existan elementos sin escribir
        if (valor.indexOf(":") != -1) {
            var hora = valor.split(":")[0];
            if (parseInt(hora) > 23) {
                $(".clockpicker").val("");
            }
        }
    }
</script>



